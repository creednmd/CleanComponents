//
//  CreateOrderInteractor.swift
//  CleanComponents
//
//  Created by Andy Warwick on 24/04/2019.
//  Copyright (c) 2019 Andrew Warwick. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import CleanComponents

protocol CreateOrderBusinessLogic: CleanInteractor
{
  func doSomething(request: CreateOrder.Something.Request)
}

protocol CreateOrderDataStore
{
  //var name: String { get set }
}

final class CreateOrderInteractor: CreateOrderBusinessLogic, CreateOrderDataStore
{
  var presenter: CleanPresenter
  var workers: [CleanWorker] = []

  private lazy var cleanPresenter: CreateOrderPresentationLogic = {
    return presenter as! CreateOrderPresentationLogic
  }()

  var worker: CleanWorker? {
    return workers.isEmpty ? nil : workers.first
  }

  init(presenter: CleanPresenter) {
    self.presenter = presenter
  }

  //var name: String = ""
  
  // MARK: Do something
  
  func doSomething(request: CreateOrder.Something.Request)
  {
    let response = CreateOrder.Something.Response()

    cleanPresenter.presentSomething(response: response)
  }
}
